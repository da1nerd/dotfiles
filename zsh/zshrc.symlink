export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

# display how long all tasks over 10 seconds take
export REPORTTIME=10

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/git ]]; then
    export CODE_DIR=~/git
fi

# add go paths
export GOPATH=~/go
export PATH=$PATH:/usr/local/go/bin:~/go/bin

export PATH=$PATH:~/git/electronite/depot_tools

# source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

# initialize autocomplete
autoload -U compinit
compinit

for config ($ZSH/**/*completion.sh) source $config

export EDITOR='vim'

export PATH=/usr/local/bin:$PATH

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

# add composer
if [[ -d ~/.config/composer/vendor/bin ]]; then
	export PATH=~/.config/composer/vendor/bin:$PATH
fi

# add flutter
if [[ -d ~/git/flutter ]]; then
	export PATH=~/git/flutter/bin:$PATH
	export PATH=~/git/flutter/flutter/bin:$PATH
fi

# add mysql
if [[ -d /usr/local/mysql/bin ]]; then
	export PATH=/usr/local/mysql/bin:$PATH
fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
while IFS=  read -r -d $'\n'; do
	PATH="$REPLY:$PATH"
done < <(find -H ~/bin -maxdepth 2 -type d -name 'bin')
export PATH

[ -z "$TMUX" ] && export TERM=xterm-256color

# Add aliases
alias vim=vi
if [[ `uname` == 'Linux' ]]; then
    alias open=nautilus
	alias xclip="xclip -selection c"
fi

# did file alias
alias did="vim +'normal Go' +'r!date' ~/did.txt"

# Base16 Shell
# if [ -z "$THEME" ]; then
    export THEME="base16-atelier-lakeside"
# fi
if [ -z "$BACKGROUND" ]; then
    export BACKGROUND="dark"
fi

BASE16_SHELL="$DOTFILES/.config/base16-shell/scripts/$THEME.sh"
# [[ -s $BASE16_SHELL ]] && source $BASE16_SHELL
source $BASE16_SHELL

# add android platform tools
if [[ -d ~/Android/Sdk ]]; then
	export ANDROID_HOME=~/Android/Sdk
fi
if [[ -d ~/Android/Sdk/tools ]]; then
	export PATH=~/Android/Sdk/tools:$PATH
fi
if [[ -d ~/Android/Sdk/platform-tools ]]; then
	export PATH=~/Android/Sdk/platform-tools:$PATH
fi
if [[ -d ~/Android/Sdk ]]; then
	export ANDROID_HOME=~/Android/Sdk
fi

# add travis path
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh

# add java path
export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
export PATH=$PATH:$JAVA_HOME/bin

# disable caps lock in favor of ctrl
setxkbmap -option ctrl:nocaps

# add paths to node
export PATH=$HOME/.node/bin:$PATH
NPM_PACKAGES="$HOME/.npm-packages"
export PATH="$NPM_PACKAGES/bin:$PATH"
export MANPATH="$NPM_PACKAGES/share/man"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"

if (( $+commands[yarn] )); then
	export PATH="$PATH: `yarn global bin`"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# added by travis gem
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh

# tabtab source for electron-forge package
# uninstall by removing these lines or running `tabtab uninstall electron-forge`
[[ -f ~/.node/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh ]] && . ~/.node/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh

# added by travis gem
[ -f /home/joel/.travis/travis.sh ] && source /home/joel/.travis/travis.sh
